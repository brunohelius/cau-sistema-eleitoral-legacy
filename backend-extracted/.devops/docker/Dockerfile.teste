FROM php:7.2-fpm

# Set working directory
WORKDIR /var/www

# Copy composer.lock and composer.json to working directory
COPY composer.json ./

# Add docker php ext repo
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/

# Install php extensions
RUN chmod +x /usr/local/bin/install-php-extensions && sync && \
    install-php-extensions mbstring pdo_pgsql zip exif pcntl gd memcached intl

# Install dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    libpng-dev \
    libjpeg62-turbo-dev \
    libfreetype6-dev \
    locales \
    zip \
    jpegoptim optipng pngquant gifsicle \
    unzip \
    git \
    curl \
    lua-zlib-dev \
    libmemcached-dev \
    nginx \
    cron  \
    libxrender1
# Install supervisor
RUN apt-get install -y supervisor

# Install composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Add user for laravel application
RUN groupadd -g 1000 www && useradd -u 1000 -ms /bin/bash -g www www

# Copy code to /var/www
COPY --chown=www:www-data . /var/www

# add root to www group
RUN chmod -R ug+w /var/www/storage

# Copy supervisor/php/nginx configs
COPY ./.devops/docker/supervisor.conf /etc/supervisord.conf
COPY ./.devops/docker/php.ini /usr/local/etc/php/conf.d/app.ini
COPY ./.devops/docker/nginx.conf /etc/nginx/sites-enabled/default

# PHP Error Log Files
RUN mkdir /var/log/php && touch /var/log/php/errors.log && chmod 777 /var/log/php/errors.log

# Deployment steps
RUN cp .env.tst .env && composer install -vvv
#RUN php artisan cache:clear
#RUN php artisan route:cache
#RUN php artisan route:clear

RUN touch /var/www/storage/logs/lumen.log
RUN chmod -R ug+w /var/www/storage/logs/lumen.log
RUN chown -R www-data:www-data /var/www

RUN touch /var/log/cron.log
RUN echo "* * * * * root cd /var/www && php artisan schedule:run >> /dev/null 2>&1" >> /etc/crontab
RUN echo "* * * * * root echo 'Scheduler artisand executado' >> /var/log/cron.log" >> /etc/crontab
CMD php /var/www/artisan doctrine:generate:proxies && cron && /usr/bin/supervisord -c /etc/supervisord.conf

EXPOSE 80
